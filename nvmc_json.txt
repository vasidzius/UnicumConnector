===========================

Общие правила авторизации.
Все запросы, требующие авторизации, осуществляют авторизацию по токену.
Токен записывается сервером в куки автоматически вместе с ответом на предыдущий запрос, и считывается из кук автоматически в следующем запросе.
Если используется робот, который не поддерживает куки, то при обращении к запросам JSON, он может передавать токен в теле запроса в дополнительном строковом параметре (который не описан ниже) "auth_token".
В ответе на запрос, робот получает токен для следующего запроса в поле "auth_token" структуры "user". Например, { "user":{...,"token":"1102bd4f3EILKQRCeyF4Skw==",...},...}.

Каждый токен действителен в течение 40-ка минут. Поэтому, обновление токена после каждого запроса - крайне желательно.

Первый токен можно получить либо с помощью запроса wjson/login.json (для авторизации человеком, требуется предварительная генерация каптчи запросом wjson/captcha.json и последующее ее отображение запросом captcha.png), либо с помощью запроса wjson/iamrobot.json (для авторизации роботом).

===========================

https://online.unicum.ru/(????/)wjson/captcha.json
Страница доступна без авторизации.
Страница создает новую каптчу и возвращает ее ID
На входе: ничего (все данные игнорируются, запрос может быть даже отправлен в форме GET)
На выходе:
Код страницы: 404. Текстовый код: Not found. Содержимое: отсутствует. Означает ошибку при генерации каптчи.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 200. Текстовый код: OK. Означает, что каптча сгенерирована успешно и будет доступна для двух использований не более 5 минут. Содержимое:
{"captid":?}	//Целое число - iD каптчи.

==================================
https://online.unicum.ru/(????/)captcha.png?xx
Возвращает PNG-файл с изображением каптчи. Разрешение 125 x 35. В запросе xx - ID каптчи в десятичной системе исчисления.

==================================
https://online.unicum.ru/(????/)wjson/login.json
Запрос залогинивается (для авторизации человеком).
На входе:
{
	"login":"???",		//Строка - логин
	"password":"???",	//Строка - пароль
	"captcha_id":?,		//Целое число или строка (в которой указано целое число) - ID каптчи
	"captcha":"??"		//Строка - введенное пользователем значение в поле каптчи
}
На входе:
Код страницы: 404. Текстовый код: Not found. Содержимое: отсутствует. Означает, что запрос был отправлен не в форме POST.
Код страницы: 404. Текстовый код: Not found. Содержимое: {"errors":["captcha not found"]}. Заданная в параметрах каптча не найдена (просрочена / использована более 2-х раз).
Код страницы: 418. Текстовый код: I’m a teapot. Содержимое: {"errors":["captcha not match"]}. Не совпадает текст каптчи с самой каптчей.
Код страницы: 400. Текстовый код Bad Request. Содержимое: {"errors":["no content"]}. Означает, что запрос в форме POST, но отсутствует тело запроса.
Код страницы: 400. Текстовый код Bad Request. Содержимое: {"errors":[" wrong content"]}. Означает, что в теле запроса не обнаружен логин или пароль или логин пустой или пароль пустой или их размер в UTF8 больше 255 символов или логин или пароль указаны два раза или более.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Означает, что логин и пароль неверные. Можно повторить запрос.
Код страницы: 403. Текстовый код: Forbidden. Содержимое: отсутствует. Означает, что логин и пароль были введены неверно более 3-х раз. Вход заблокирован на час.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 200. Текстовый код: OK. Означает, что авторизация прошла успешно. Токен сохранен в куку _ufs_token. Содержимое:
{
	"user":
	{
		"login":?,	//строка - логин пользователя
		"lang":?,	//строка из двух символов, обозначающая язык пользователя. На данный момент поддерживаются языки: ru, en, fr, ge и tr
		"lightweb":?,	//true или false - указывает выбран ли облегченный UI для данного пользователя (для минимизации трафика)
		"cmess":?,	//Может отсутствовать. Строка с объявлением для компании (не более 255 символов). Поле отсутствует в некоторых запросах (например, в login.json), либо если сообщение не задано.
		"umess":?,	//Может отсутствовать. Строка с объявлением для пользователя (не более 255 символов). Поле отсутствует в некоторых запросах (например, в login.json), либо если сообщение не задано.
		"blocked":?,	//Может отсутствовать. true (если логин заблокирован) или false. Поле отсутствует в некоторых запросах (например, в login.json).
		"rights":	//права доступа
		{
			"admin":?,		//true или false. Первое означает, что пользователь является мегаадмином. Для всех остальных - второе.
			"newdevice":?,		//true или false. Первое означает, что пользователю разрешено регистрировать новые торговые автоматы / подключать модемы. Второе - нет.
			"encashment":?,		//true или false. Первое означает, что пользователю разрешено просматривать инкассации. Второе - нет.
			"sendrequests":?,	//true или false. Первое означает, что пользователю разрешено отправлять запросы в автоматы. Второе - нет.
			"planedit":?,		//true или false. Первое означает, что пользователю разрешено редактировать планогарммы. Второе - нет.
			"showaddress":?,	//true или false. Первое означает, что пользователю разрешено показывать адреса торговых автоматов. Второе - нет.
			"todayroute":?,		//true или false. Первое означает, что пользователю разрешен доступ к сегодняшнему маршруту. Второе - нет (если не разрешено правом allroutes).
			"allroutes":?,		//true или false. Первое означает, что пользователю разрешен доступ ко всем маршрутам (включая сегодняшний). Второе - нет.
			"curanalysis":?,	//true или false. Первое означает, что пользователю разрешен доступ текущему анализу (продаж). Второе - нет.
			"vmedit":?,		//true или false. Первое означает, что пользователю разрешено редактировать торговые автоматы. Второе - нет.
			"geo":?			//true или false. Первое означает, что пользователю разрешено видеть геолокацию торговых автоматов. Второе - нет.
		},
		"group":?,		//null (логин не привязан к группе) или целое число (логин привязан к группе, идентификатор которой задан этим числом).
		"lerr":?,		//Целое число. Ненулевое число означает код ошибки лицензии сервера
		"token":?		//null или строка. Токен пользователя (копия куки nvmc_login).
	}
}

==================================

https://online.unicum.ru/(????/)wjson/iamrobot.json
Запрос на основании переданного логина и пароля формирует токен для первого запроса для авторизации роботом.
Чтобы исключить перебор паролей, данный запрос возвращает ответ (при условии отсутствия ошибок) не ранее, чем через 5 секунд. И одновременно может выполняться только один такой запрос (при отправке запроса iamrobot.jso во время выполнения другого запроса iamrobot.jso, будет выслан ответ с кодом ошибки 409).
Важно, что при успешном формировании токена с помощью данного запроса, он не сохраняется в куки. Его обязательно следует передавать в следующем запросе в теле запроса (в параметре "auth_token", см. выше, способы авторизации).
На входе:
{
	"login":"???",		//Строка - логин
	"password":"???"	//Строка - пароль
}
На выходе:
Код страницы: 400. Текстовый код Bad Request. Содержимое: {"errors":["no content"]}. Означает, что запрос в форме POST, но отсутствует тело запроса.
Код страницы: 400. Текстовый код Bad Request. Содержимое: {"errors":["wrong content"]}. Означает, что в теле запроса не обнаружен нужный параметр или он в неверном формате.
Код страницы: 404. Текстовый код: Not found. Содержимое: отсутствует. Означает, что запрос был отправлен не в форме POST.
Код страницы: 409. Текстовый код: Conflict. Содержимое: {"errors":["busy, try again later"]}. Означает, что в данный момент выполняется другой запрос getauthtoken.json, и запрос необходимо повторить.
Код страницы: 200. Текстовый код: OK. Означает, что токен был сформирован успешно. Содержимое:
{
	"token":?	//Строка - токен для авторизации в следующем запросе .json (его следует передавать в параметре "auth_token").
}

==================================

https://online.unicum.ru/(????/)wjson/logout.json
Запрос разлогинивается.
На входе: ничего (все данные игнорируются, запрос может быть даже отправлен в форме GET)
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз. Вход заблокирован на час.
Код страницы: 200. Текстовый код: OK. Содержимое отсутствует. Запрос выполнен успешно.

==================================

https://online.unicum.ru/(????/)wjson/getauth.json
Запрос возвращает информацию о пользователе, из-под которого осущеслвена авторизация.
На входе: ничего (все данные игнорируются, запрос может быть даже отправлен в форме GET)
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз. Вход заблокирован на час.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"defaultpage":?,	//целое число, обозначающее дефолтную стартовую страницу (1 - страница маршрута, 0 - стандартная стартовая страница).
	"compbm":?,		//строка или null - букмарк компании, которой принадлежит пользователь. Значение null говорит о том, что пользователь принадлежит компании root.
	"route_guid":?		//строка или null - GUID маршрута, за которым закреплен пользователь. Значение null говорит о том, что пользователь не закреплен ни за каким маршрутом.
}
==================================

https://online.unicum.ru/(????/)wjson/getmachinetypes.json
Запрос работает без авторизации.
Прав доступа не требуется.
Входные данные не требуются (запрос может передаваться как в форме GET, так и в форме POST).
Возвращает список поддерживаемых типов автоматов.
На выходе:
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"types":[	//Массив структур. Каждая структура описывает один поддерживаемый тип автомата.
		{
			"typeid":?,		//целое число - идентификатор типа автомата.
			"typestr":?,		//строка - тип автомата в текстовом виде.
			"typestrfull":?,	//строка или null - полный тип автомата в текстовом виде.
			"typecode":?,		//строка, используемая для кодирования данного типа автомата при выгрузке из 1С.
			"manufacturerid":?,	//целое число - идентификатор производителя автомата.
			"coffee":?,		//true или false - определяет входит ли кофейник в состав автомата.
			"snack":?		//true или false - определяет входит ли снек в состав автомата.
		},...
	]
}

==================================

https://online.unicum.ru/(????/)wjson/getmachines.json
Без прав доступа
Запрос возвращает список автоматов по компании.
На входе:
{
	"compbm":?,		//Необязательный параметр: строка или null. Задает букмарк компании, автоматы которой нужны. Значение null (или отсутствие параметра) означает компанию,
				//которой принадлежит запрашивающий логин.
	"machinebm":?,		//Необязательный параметр: строка. При наличии, параметры "compbm" и "subcompanies" игнорируются. Задает букмарк автомата, данные по которому нужно обновить.
	"subcompanies":?,	//Необязательный параметр: true или false. Указывает, требуется ли включать автоматы всех подкомпаний (true) или нет (false). При отсутвтсии считается равным false.
	"errorweight":?,	//Необязательный параметр: true или false. Указывает, требуется ли включать в ответ ошибки (true) или нет (false). При отсутвтсии считается равным false. При true, время обработки зарпоса увеличивается.
	"geo_auto":?,		//Необязательный параметр: true или false. Указывает, требуется ли включать в ответ автоматическую геолокацию (true) или нет (false). При отсутвтсии считается равным false. При true, время обработки зарпоса увеличивается.
	"lastEncashment":?,	//Необязательный параметр: true или false. Указывает, требуется ли включать в ответ время последней инкассации (true) или нет (false). При отсутвтсии считается равным false. При true, время обработки зарпоса увеличивается.
	"nextEncashment":?,	//Необязательный параметр: true или false. Указывает, требуется ли включать в ответ время следующего обслуживания (true) или нет (false). При отсутвтсии считается равным false. При true, время обработки зарпоса увеличивается.
	"products":?		//Необязательный параметр: true или false. Указывет требуется ли включать в ответ данные по заканчивающимся товарам, числу и стоимости продаж или нет. Если указано true, требуется право доступа "Текущий аналих". При этом, время обработки зарпоса увеличивается.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенный автомат не найден.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1008,"errors":"requested company was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"company":?,	//null или строка. Если строка - название компании. Если null - значит запрошенная компания является корневой (root).
	"machines":[	//Массив стркутур, где каждый элемент - это автомат
		{
			"compbm":?,	//строка или null: букмарк компании, в которой находится автомат (null - автомат находится в ROOT).
			"bm":?,		//строка: букмарк автомата в базе.
			"id":?,		//целое число - уникальный идентификатор автомата в базе.
			"guid":?,	//строка или null - GUID автомата
			"serial":?,	//строка - серийный номер автомата.
			"rentab":?,	//строка - группа рентабельности.
			"typeid":?,	//целое число - идентификатор типа автомата (см. запрос getmachinetypes.json).
			"typestr":?,	//строка или null - тип автомата в текстовом виде.
			"hide":?,	//true или false. Установлен в true, если в настройках автомата запрещено отображение адреса и геолокации (в этом случае ни то, ни другое не передается сервером)
			"groups":[?,?,...],	//null или массив целых чисел. Первое означает, что автомат не привязан ни к какой группе. Во втором случае каждый элемент задает идентификатор группы, к которой привязан автомат
						//(автомат может быть привязан сразу к нескольким группам).
			"geo_man":{	//отсутствует (если нет прав доступа, либо включен параметр hide), либо null, либо структура. Если структура - описывает расположение автомата, определенное вручную. Если null, то означает,
					//что ручная геолокация не задана.
				"lat":?,	//число с плавающей точкой, определяющее широту в градусах.
				"lng":?,	//число с плавающей точкой, определяющее долготу в градусах.
				"alt":?,	//опциональное (может не передаваться) число с плавающей точкой, определяющее высоту в метрах.
				"radius":?	//опциональное (может не передаваться) число с плавающей точкой, определяющее точность в метрах.
			},
			"address":?,	//ОТСУТСТВУЕТ, если нет прав доступа к адресу, либо если включен параметр hide. Строка - адрес расположения автомата.
			"place":?,	//ОТСУТСТВУЕТ, если нет прав доступа к адресу, либо если включен параметр hide. Строка - место расположения автомата.
			"comment":?,	//строка - комментарий к адресу / расположению.
			"nextEncashment":?,	//ОТСУТСТВУЕТ, если не запрошено. Иначе null или строка. Если строка - определяет время, следующего маршрута, в который включен автомат. Время указывается в формате
						//YYYY-MM-DDTHH:mm:SS.UUUZ, где Z - либо Z (часовой пояс компании не задан), либо смещение в формате +HH:mm или -HH:mm относительно нулевого меридиана.
			"device":{	//null или структура, описывающая модем / автомат. Если торговый автомат не привязан ни к какой сим-карте (модему), здест передается null (автомат НЕ ИНИЦИАЛИЗИРОВАН).
				"phone":?,	//null или строка - номер телефона сим-карты, установленной в автомате. null - номер пока не определен.
				"vmtoken":?,	//null или строка - токен автомата для 24U (для QR-кода). Можно считать признаком наличия 24U.
				"redirected":?,	//true или false - если true, то автомат наективен (переадресован на другой сервер телеметрии).
				"status":{	//null или структура, описывающая состояние связи. null означает, что пока состояние связи неизвестно (автомат завели вручную, и пока он не подключился).
					"removed":?,	//false или целое число. Обозначает, удален модем или нет. Число означает удаленный (автомат НЕДЕЙСТВУЮЩИЙ) автомат. Значение - причина удаления:
							//0 - удален оператором (вручную), 1- автоматически из-за смены сим-карты, 2 - автоматически из-за обнаружения сим-карты в другом модеме,
							//3 - автоматически из-за замены контроллера, 4 - автоматически из-за замены монетника (не исп.), 5 - автоматически из-за замены банкнотника (не исп.),
							//6 - автмоатически из-за замены считывателя (не исп.), 7 - производится полная чистка информации по модему (удаление всей информации из базы),
							//остальное - причина неизвестна.
							//false означает действующий модем.
					"online":?	//отсутствует (если "removed не равен false), либо false, либо true. Показывает состояние - на связи или нет.
				},
				"updating":?,	//false или целое число от 0 до 100. Если число показывает, что автомат загружает автоматическое обновление, а значение сколько процентов загружено. false -
						//обновление не загружается.

				"geo_auto":{	//отсутствует (если нет прав доступа, либо не запрошено, либо включен параметр hide), либо null, либо структура. Если структура - описывает расположение автомата, определенное
						//автоматически модемом. Если null, то означает, что оборудование автомата не поддерживает определение положения.
					"lat":?		//число с плавающей точкой, определяющее широту в градусах.
					"lng":?		//число с плавающей точкой, определяющее долготу в градусах.
					"radius":?	//число с плавающей точкой, определяющее точность (радиус окружности) в метрах.
					"updatetime":??	//null или строка. Если строка - определяе время, когда было обновлено положение автомата (по часам сервера, в часовом поясе автомата). Время указывается в формате
							//YYYY-MM-DDTHH:mm:SS.UUUZ, где Z - либо Z (часовой пояс компании не задан), либо смещение в формате +HH:mm или -HH:mm относительно нулевого меридиана.
				},
				"decimal":?,	//Число от 0 до 3 - положение десятичной точки между рублями и копейками (долларами и центами). Определяет сколько цифр уходит в обозначение копеек. Для РФ может быть 0 или 2.
				"changer":{	//null или структура, описывающая монетоприемник. Если монетоприемник не установлен - null.
					"errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки монетника (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
					"errorscount":[?,?],	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок, второй - число серьезных.
					"tubes":[	//массив туб со здачей монетоприемника. Может быть пустым массивом. Каждая туба описывается отдельной структурой.
						{
							"index":?,	//целое число от 0 до 15 - индекс монеты.
							"value":?,	//строка - величина монеты (точка отделяет рубли от копеек или доллары от евро).
							"error":?,	//true или flase - означает наличие сбоя в тубе
							"full":?,	//true или false - означает полноту заполнения тубы (true - заполнена до верха). Если error равен true, данное поле всегда false.
							"count":?	//целое число, обозначающее количество монет в тубе. Значение меньше 20 рекомендуется отображать красным. Если error равен true, данное поле всегда 0.
						},...
					]
				},
				"bill":{	//null или структура, описывающая банкнотоприемник. Если банкнотоприемник не установлен - null.
					"errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки банкнотоприемника (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
					"errorscount":[?,?],	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок, второй - число серьезных.
					"tubes":[	//null или массив банкнот для сдачи. Если null - означает, что банкнотоприемник не имеет опции ресайклера. Может быть пустым массивом.
							//Каждый номинал описывается отдельной структурой.
						{
							"index":?,	//целое число от 0 до 15 - индекс банкноты.
							"value":?,	//строка - величина банкноты (точка отделяет рубли от копеек или доллары от евро).
							"error":?,	//true или flase - означает наличие сбоя в номинале
							"full":?,	//true или false - означает полноту заполнения ресайклера (true - заполнен до максимума). Если error равен true, данное поле всегда false.
							"count":?	//целое число, обозначающее количество бананот в ресайклере. Значение меньше 3 рекомендуется отображать красным. Если error равен true, данное поле всегда 0.
						},...
					]
				},
				"cashless1":{	//null или структура, описывающая считыватель карт 1. Если считыватель не установлен - null.
					"errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки считывателя (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
					"errorscount":[?,?]	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок, второй - число серьезных.
				},
				"cashless2":{	//null или структура, описывающая считыватель карт 2. Если считыватель не установлен - null.
					"errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки считывателя (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
					"errorscount":[?,?]	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок, второй - число серьезных.
				},
				"fiscalprinter":{	//null или структура, описывающая ККТ. Если ККТ не установлена - null.
					"errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки ККТ (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
					"errorscount":[?,?]	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок, второй - число серьезных.
				},
				"ctrl_errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки основного контроллера ТА / телеметрии (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
				"ctrl_errorscount":[?,?],//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок основного контроллера ТА, второй - число серьезных.
				"vm_errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки ТА (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
				"vm_errorscount":[?,?],	//отсутствует, если не запрошено. Массив двух целых чисел. Первый элемент показывает число несерьезных ошибок ТА, второй - число серьезных.
				"sel_errorweight":?,	//отсутствует, если не запрошено. целое число от 0 до 2 - серьезность ошибки ячеек / блокировки ячеек (0 - нет ошибки, 2 - очень серьезная ошибка, 1 - несерьезная ошибка, либо серьезная ошибка в прошедшем времени).
				"proddif":?,		//отсутствует, если не запрошено, либо нет прав. null - нет данных, true - планограмма не соответствует автомату, false - планограмма соответствует.
				"prodlevel":?,		//отсутствует, если не запрошено, либо нет прав. null - нет данных, 0 - продукты есть, один из подходит к концу, 2 - один из кончился.
				"vendscount":?,		//отсутствует, если не запрошено, либо нет прав. null - нет данных, целое число - число продаж с последней инкассации.
				"vendscost":?,		//отсутствует, если не запрошено, либо нет прав. null - нет данных, строка - сумма продаж с последней инкассации.
				"lastEncashment":{	//отсутствует, если не запрошено. null или структура, описывающая последнюю инкассацию (обслуживание).
					"date":?,	//null или строка. Если строка - определяе время, когда было обслуживание автомата (по часам сервера, в часовом поясе автомата). Время указывается в формате
							//YYYY-MM-DDTHH:mm:SS.UUUZ, где Z - либо Z (часовой пояс компании не задан), либо смещение в формате +HH:mm или -HH:mm относительно нулевого меридиана.
					"byserver":?,	//true или false - определяет какое время указано в поле "date". Значение false означает время проведения инкассации по часам торгового автомата.
							//true означает, что указано время поступления информации об обслуживании на сервер по часам сервера.
					"summertime":?	//отсутствует, null, true или false. Поле присутствует только если "byserver" равен false. Значение null говорит о том, что в автомате запрещен перевод часов на
							//летнее / зимнее время. false означает, что указано зимнее время. true означает, что указано летнее время.
				}
			},
			"route":{	//null или структура. Если автомат не привязан к маршруту, то null. Если привязан, то описывается маршрут.
				"guid":?,	//null или строка - GUID маршрута.
				"name":?	//строка - название маршрута.
			}
		},...
	]
}

==================================

https://online.unicum.ru/(????/)wjson/getcompanies.json
Запрос возвращает список автоматов по компании.
На входе:
{
	"compbm":"???",		//Необязательный параметр: строка или null. Задает букмарк компании, автоматы которой нужны. Значение null (или отсутствие параметра) означает компанию,
				//которой принадлежит запрашивающий логин.
	"subcompanies":?	//Необязательный параметр: true или false. Указывает, требуется ли включать автоматы всех подкомпаний (true) или нет (false).
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1008,"errors":"requested company was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"company":?,	//null или строка. Если строка - название компании. Если null - значит запрошенная компания является корневой (root).
	"compbm":?,	//null или строка - букмарк компании.
	"parentbm":?,	//null, строка или отсутствует. Если строка, то указывает букмарк родительской компании. Отсутствует, если родительской
			//компании нет (либо запрошен root, либо запрошен самый верхний уровень, доступный логину). null означает, что родительской компанией является root. В случае
	"subcompanies":[	//Может отсутствовать, если подкомпаний нет. Массив стркутур, где каждый элемент - это компания.
		{
			"company":?,	//Строка. - название компании.
			"compbm":?,	//строка - букмарк компании.
			"subcompanies":[...]	//Может отсутствовать либо если в запросе subcompanies равен false, либо если подкомпаний нет. Массив подкомпаний в том же формате, как и внешний массив subcompanies.
		},...
	]
}

==================================

https://online.unicum.ru/(????/)wjson/settings.json
Запрос позволяет считать / поменять настройки пользователя (как пользователя, от которого происходит запрос, так и другого пользователя).
На входе:
{
	"user":"???",		//Необязательный параметр: строка или null. Задает логин, настрйоки которого нужно считать / записать. Если null или отсутствует, то будут меняться / считываться настройки логина, который авторизован.
	"lang":??,		//Необзательноый параметр: строка, целое число или null. Определяет нужно ли изменить язык пользователя и если да, то на какой. Отсутствие параметра или null не изменяет язык пользователя.
				//0 или "ru" устанавливает русский язык. 1 или "en" устанавливает английский. 2 или "fr" - французский. 3 или "ge" - немецкий. 4 или "tr" - турецкий.
	"defaultpage":??,	//Необзательноый параметр: целое число или null. Определяет нужно ли менять стартовую страницу и на какую. Отсутствие параметра или null не изменяет стартовую страницу.
				//0 устанавливает стандартную страницу. 1 устанавливает страницу маршрута (если есть доступ к маршрутам).
	"lightweb":??,		//Необзательноый параметр: false, true или null. Определяет нужно ли менять версию интерфейса и если да, то на какую. Отсутствие параметра или null не изменяет версию.
				//false выбирает полную версию. true выбирает облегченную версию.
	"columns1:":[??,??,??,...]	//Необязательный параметр: массив 32-х или менее элементов, каждый из которых равен true, false или null. Если массив имеет менее 32-х элементов, то недостающие считаются равными null.
					//Определяет, нужно ли менять настройки видимости колонок. true - спрятать колонку, false - открыть, null - не менять.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо настройки указанного логина поменять нельзя, либо запрошенный логин вообще не найден.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"lang":?,	//строка, указывающая язык пользователя, заданного в параметре "user" (если язык менялся, то указано состояние после изменения). Возможные значения: "ru", "en", "fr", "ge" и "tr"
	"lightweb":?,	//true или false - указывает выбран ли облегченный UI для пользователя, заданного в параметре "user" (если параметр менялся, то указано состояние после изменения).
	"defaultpage":?,//целое число - указывает стартовую страницу для пользователя, заданного в параметре "user" (если параметр менялся, то указано состояние после изменения). 0 - стандартная, 1 - маршруты.
	"columns1:":[??,??,??,...]	//массив 32-х элементов, каждый из которых равен true или false. Указывает настройки видимости колонок. true - спрятать колонку, false - показать.
}

==================================

https://online.unicum.ru/(????/)wjson/setmachineshide.json
ТРЕБУЮТСЯ ОДНОВРЕМЕННО ДВА ПРАВА ДОСТУПА: Геолокация и отображение адреса.
Запрос позволяет поменять опцию отображения / скрытия адреса и геолокации группы автоматов.
На входе:
{
	"hide":?,		//true (скрыть адреса и геолокацию) или false (показать адреса и геолокацию)
	"machines":[?,?,...]	//Массив строк. Каждый элемент является строкой, задающей букмарк торгового автомата в базе.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}

==================================

https://online.unicum.ru/(????/)wjson/setmachinedata.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: Редактирование торговых автоматов.
Запрос позволяет изменить данные торгового автомата.
В описании некоторых полей указано, что они игнорируются при установленном параметре hide. Под этим следует понимать следующее. Если параметр hide для данного автомата в базе данных сброшен, то параметр принимается.
Если он установлен, то проверяется есть ли параметр hide в теле запроса. Если он есть (и если есть права доступа на изменение параметра hide), и если он в запросе сброшен, то параметр принимается, не смотря на то, что
в базе данных hide установлен. Во всех остальных случаях, параметр игнорируется.
На входе:
{
	"machinebm":?,		//Строка, задающая букмарк торгового автомата в базе, данные которого необходимо отредактировать.
	"serial":?,		//Необязательный параметр. Игнорируется при отсутствии права доступа на подключение новых автоматов. Строка не менее 1 символа, не более 100 символов.
				//Задает новый заводской номер автомата. При отсутствии заводской номер не меняется. Все символы должны быть из кодировки 1251.
	"address":?,		//Необязательный параметр. Игнорируется при отсутствии права доступа на отображение адреса, либо если установлен параметр hide. null или строка не более 100 символов (в некоторых версиях не более 255).
				//Задает новый адрес расположения автомата. При отсутствии адрес не меняется. При равенстве null адрес стирается. Все символы должны быть из кодировки 1251.
	"place":?,		//Необязательный параметр. Игнорируется при отсутствии права доступа на отображение адреса, либо если установлен параметр hide. null или строка не более 255 символов.
				//Задает новое место расположения автомата. При отсутствии адрес не меняется. При равенстве null место стирается. Все символы должны быть из кодировки 1251.
	"comment":?,		//Необязательный параметр. Игнорируется при отсутствии права доступа на отображение адреса, либо если установлен параметр hide. null или строка не более 255 символов.
				//Задает новый комментарий к адресу/место расположения. При отсутствии комментарий не меняется. При равенстве null комментарий стирается. Все символы должны быть из кодировки 1251.
	"rentab":?,		//Необязательный параметр. null или строка не более 255 символов. Задает новую группу рентабельности. При отсутствии группа рентабельности не меняется.
				//При равенстве null группа рентабельности стирается. Все символы должны быть из кодировки 1251.
	"typeid":?,		//Необязательный параметр. Целое число от 0 до 65535. Задает идентификатор типа автомата (модель), см. таблицу поддерживаемых типов.
	"geo_man":{		//Необязательный параметра. Игнорируется при отсутствии права доступа на геолокацию, либо если установлен параметр hide. null или структура, описывающая положение автомата.
				//При отсутствии, заданное вручную положение не меняется. При равенстве null - стирается.
		"lat":?,		//число с плавающей точкой, определяющее широту в градусах.
		"lng":?,		//число с плавающей точкой, определяющее долготу в градусах.
		"alt":?,		//Необязательный параметр (но обязателен при наличии radius) - число с плавающей точкой, определяющее высоту в метрах.
		"radius":?		//Необязательный параметр - число с плавающей точкой, определяющее точность в метрах.
	},
	"hide":?,		//Необязательный параметр. Игнорируется при отсутствии любого из двух прав доступа: Геолокация и отображение адреса. true (скрыть адреса и геолокацию) или false (показать адреса и геолокацию).
	"groups":[?,?,?,...]	//Необязательный параметр. Игнорируется, если логин (который вызвал запрос) привязан к какой-нибудь группе. null или массив целых чисел (не более 63-х элементов).  Задает привязку автомата к группам.
				//Автомат может быть либо не привязан ни к одной группе, либо привязан к одной или более группам (но не более 63-х). Каждый элемент массива задает идентификатор группы, к которой должен быть
				//привязан автомат. null или пустой массив удаляет привязку к группам. Отсутствующий параметр не изменяет привязку к группам.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа, либо нет права доступа к данному автомату.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1010,"errors":"requested group was not found"}. Означает, что одна из групп, к которым требуется привязать автомат, не найдена, либо привязать к ней данный автомат нельзя.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}

==================================
https://online.unicum.ru/(????/)wjson/genguid.json

Запрос работает без авторизации. Запрос генерирует уникальный идентификатор, который может использользваться для создания нового автомата запросом createmachine.json (см. ниже). Для исключения двойного создания ТА при
двойном нажатии кнопки, рекоммендуется сгенерировать идентификатор перед отображением страницы и сохранить его в hidden-параметрах, а при нажатии кнопки создания - передавать этот идентификатор в запросе createmachine.json.
Прав доступа не требуется.
Входные данные не требуются (запрос может передаваться как в форме GET, так и в форме POST).
Возвращает список поддерживаемых типов автоматов.
На выходе:
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"guid":"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"	//Строка, уникальный идентификатор. В каждом запросе генерируется новый идентификатор.
}

==================================

https://online.unicum.ru/(????/)wjson/createmachine.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: Редактирование торговых автоматов.
Запрос позволяет создать торговый автомат.
Автомат создается автоматически привазанным к группе логина, если логин привязан к какой-либо группе.
Автомат создается автоматически привязанным к маршруту логина, если логин привязан к какому-либо маршруту.
На входе:
{
	"compbm":?,		//Необзятаьельный параметр. Строка или NULL. Если строка, то она должна задавать букмарк компании, в которой нужно создать автомат. NULL или отсутствие параметра создает автомат в компании пользователя.
	"guid":?,		//Обязательный парметр - строка, задающая GUID нового автомата. Если автомат с таким GUID уже есть в базе, то автомат создан не будет (вметсо этого будет выслан ответ с кодом 208, в котором будет указан
				//букмарк этого автомата).
	"serial":?,		//Обязательный параметр. Строка не менее 1 символа, не более 100 символов. Задает заводской номер нового автомата.
				//Задает новый заводской номер автомата. При отсутствии заводской номер не меняется. Все символы должны быть из кодировки 1251.
	"address":?,		//Необязательный параметр. null или строка не более 100 символов (в некоторых версиях не более 255).
				//Задает адрес расположения автомата. Все символы должны быть из кодировки 1251. При отсутствии или null прописывается пустой адрес.
	"place":?,		//Необязательный параметр. null или строка не более 255 символов
				//Задает место расположения автомата. Все символы должны быть из кодировки 1251. При отсутствии или null прописывается пустое место.
	"comment":?,		//Необязательный параметр. null или строка не более 255 символов.
				//Задает комментарий к адресу/месту расположения. Все символы должны быть из кодировки 1251. При отсутствии или null прописывается пустой комментарий.
	"rentab":?,		//Необязательный параметр. null или строка не более 255 символов. Задает новую группу рентабельности.
				//Все символы должны быть из кодировки 1251. При отсутствии или null прописывается пустая группа.
	"typeid":?,		//Обязательный параметр. Целое число от 0 до 65535. Задает идентификатор типа автомата (модель), см. запрос getmachinetypes.json выше.
	"geo_man":{		//Необязательный параметра. null или структура, описывающая положение автомата.
		"lat":?,		//число с плавающей точкой, определяющее широту в градусах.
		"lng":?,		//число с плавающей точкой, определяющее долготу в градусах.
		"alt":?,		//Необязательный параметр (но обязателен при наличии radius) - число с плавающей точкой, определяющее высоту в метрах.
		"radius":?		//Необязательный параметр - число с плавающей точкой, определяющее точность в метрах.
	},
	"hide":?,		//Необязательный параметр. Игнорируется при отсутствии любого из двух прав доступа: Геолокация и отображение адреса. true (скрыть адреса и геолокацию) или false (показать адреса и геолокацию).
				//При отсутствии прав доступа, либо при отсутствии параметра, устанавливается false.
	"groups":[?,?,?,...]	//Необязательный параметр. Игнорируется, если логин (который вызвал запрос) привязан к какой-нибудь группе. null или массив целых чисел (не более 63-х элементов).  Задает привязку автомата к группам.
				//Автомат может быть либо не привязан ни к одной группе, либо привязан к одной или более группам (но не более 63-х). Каждый элемент массива задает идентификатор группы, к которой должен быть
				//привязан автомат.
				//Если логин привязан к группе, то параметр игнорируется, а автомат создается автоматически привязанным к группе пользователя.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа, либо нет права доступа к данному автомату.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1008,"errors":"requested company was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1010,"errors":"requested group was not found"}. Означает, что одна из групп, к которым требуется привязать автомат, не найдена, либо привязать к ней данный автомат нельзя.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200 или 208. Текстовый код: OK. (200 означает, что машина создана, а 208 означает, что была найдена машина с заданным в параметрах GUID). Содержимое:
{
	"user":{....},	//см. запрос login.json
	"bm":?		//Строка, являющаяся букмарком созданного торгового автомата.
}
==================================

https://online.unicum.ru/(????/)wjson/getgroups.json

Права доступа: пользователь НЕ должен быть привязан к группе.
Запрос позволяет получить список групп конкретной компании, либо компании и всех ее предков.
На входе:
{
	"compbm":?,	//Необзятаьельный параметр. Строка или NULL. Если строка, то она должна задавать букмарк компании, список групп которой нужно получить.
			//При равенстве NULL или отсутствии, будет возвращен список групп компании пользователя.
	"parents":?	//Необязательный параметр: true или false (при отсутствии считается равным false). Если параметр равен true, то будет возвращен не только список групп запрошенной компании, но и всех ее предков.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа, либо нет права доступа к данному автомату.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1008,"errors":"requested company was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"groups":[	//Массив, в котором каждый элемент является структурой, описывающей группу. Массив может быть пустым.
		{
			"name":?,	//Строка, являющаяся названием группы.
			"id":?		//Целое число, являющееся идентификатором группы.
		},...
	]
}
==================================
https://online.unicum.ru/(????/)wjson/delmachine.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: Редактирование торговых автоматов. Если к автомату привязан модем, то должно быть еще право доступа на регистрацию новых автоматов.
Запрос позволяет удалить автомат (также удаляются все ссылки в маршрутах, вся история планограмм, привязка к модемам).
На входе:
{
	"machinebm":?		//Строка, задающая букмарк торгового автомата в базе, который требуется удалить.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа, либо нет права доступа к данному автомату.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенная компания не найдена.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}

==================================

https://online.unicum.ru/(????/)wjson/wjson/movemachines.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: Редактирование торговых автоматов.
Запрос позволяет переместить группу автоматов в другую компанию.
На входе:
{
	"compbm":?,		//обязательный параметр - строка, определяющая букмарк компании, куда переместить автомтаы.
	"machines":[?,?,...]	//Массив строк. Каждый элемент является строкой, задающей букмарк торгового автомата в базе.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо отсутствуют необходимые для данной операции права доступа.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}

==================================

https://online.unicum.ru/(????/)wjson/getmachineassign.json
При параметре unassigned равном true ТРЕБУЮТСЯ ПРАВО ДОСТУПА: регистрация новых автоматов.
В других ситуациях особых прав доступа не требуется.
Запрос возвращает список привязанных к автомату модемов (либо список модемов, которые можно к нему привязать).
На входе:
{
	"machinebm":?,		//Обязательный параметр: строка, задает букмарк автомата, по которому нужно сформировать список.
	"unassigned":?		//true или false. Значение false (или отсутствие параметра) возвращает только список привязанных модемов. true возвращает список и привязанных и тех, которые можно привязать.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенный автомат не найден.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"devices":[	//Массив структур, в котором каждый элемент описывает отдельный модем
		{
			"id":?,		//целое число, являющееся уникальным идентификатором модема.
			"assigned":?,	//true (модем привязан к автомату) или false (модем не привязан ни к одному из автоматов).
			"phone":?,	//null или строка - номер телефона сим-карты, установленной в автомате. null - номер пока не определен.
			"IMEI":?,	//строка, определяющая IMEI модема
			"index":?,	//целое число, определяющее адрес устройства (в случае подключения по цепочке нескольких автоматов к одному модему). В большинстве случаев здесь будет 0. Отображать через : после IMEI.
			"vmtoken":?,	//null или строка - токен автомата для 24U (для QR-кода). Можно считать признаком наличия 24U.
			"redirected":?,	//true или false - если true, то автомат наективен (переадресован на другой сервер телеметрии).
			"status":{	//null или структура, описывающая состояние связи. null означает, что пока состояние связи неизвестно (автомат завели вручную, и пока он не подключился).
				"removed":?,	//false или целое число. Обозначает, удален модем или нет. Число означает удаленный (автомат НЕДЕЙСТВУЮЩИЙ) автомат. Значение - причина удаления:
						//0 - удален оператором (вручную), 1- автоматически из-за смены сим-карты, 2 - автоматически из-за обнаружения сим-карты в другом модеме,
						//3 - автоматически из-за замены контроллера, 4 - автоматически из-за замены монетника (не исп.), 5 - автоматически из-за замены банкнотника (не исп.),
						//6 - автмоатически из-за замены считывателя (не исп.), 7 - производится полная чистка информации по модему (удаление всей информации из базы),
						//остальное - причина неизвестна.
						//false означает действующий модем.
				"online":?	//отсутствует (если "removed не равен false), либо false, либо true. Показывает состояние - на связи или нет.
			}
		},...
	]
}
==================================

https://online.unicum.ru/(????/)wjson/setmachineassign.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: регистрация новых автоматов.
Запрос привязывает (или отвязывает) к автомату модемы.
На входе:
{
	"machinebm":?,		//Обязательный параметр: строка, задает букмарк автомата, по которому нужно сформировать список.
	"devices":[]		//Массив целых чисел (от 0 до 63 элементов). Каждое число задает идентификатор модема, который должен быть првязан к автомату.
				//Ранее привязанные модемы отвязываются (не входящие в этот список). Массив может быть пустым или отсутствовать (в этом случае от автомат отвязываются все модемы).
				//Все указанные модемы должны быть непривязанными к другим автоматам. Только один модем (и только самый новый модем - модем с самым большим идентификатором) может быть действующим (не удаленным).
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 400. Текстовый код: Not Found. Содержимое: {"error":1012,"errors":"device is assigned"}. Означает, что один из перечисленных модемов привязан к другому автомату.
Код страницы: 400. Текстовый код: Not Found. Содержимое: {"error":1013,"errors":"device is not removed"}. Означает, что один из перечисленных модемов является
			действующим, и при этом это не самый новый модем (можем не с самым большиим идентификатором).
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенный автомат не найден.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1011,"errors":"requested device was not found"}. Означает, что один из перечисленных модемов не найден в базе данных.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}

==================================

https://online.unicum.ru/(????/)wjson/getplanogram.json
Права доступа - не требуется.
Позволяет получить планогармму автомата (прошлую, текущую или будущую, запланированную к изменению).
На входе:
{
	"machinebm":?,		//Обязательный параметр: строка, задает букмарк автомата, по которому нужно сформировать список.
	"history":?		//Необязательный параметр, определяющий какую планограмму требуется найти.
				//Отсутствие параметра или false запрашивает будущую планогармму, запланированную к изменению (если ее нет, будет возвращена текущая).
				//значение null запрашивает текущую планогармму, действующую в данный момент.
				//В остальных случаях это либо целое число в диапазоне от 0 до 18446744073709551615, либо строка, определающая данное число в шестнадцатеричной форме в
				//диапазоне от "0000000000000000" до "FFFFFFFFFFFFFFFF". Внимание! Некоторые языки программирования не работают с целыми числами, превышающими 4294967295, поэтому,
				//рекоммендуется использовать строковую форму. Число (или его шестнадцатеричная форма) задает ID любого события в базе данных (данное событие может принадлежать как данному,
				//так и другому автомату, и более того, даже может вовсе отсутствовать). Будет возвращена планогармма, которая действовала в тот момент, когда данное событие произошло.
				//Более старые события имеют меньший ID, более новые - больший ID.
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенный автомат не найден.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"combo":?,	//true или false - показывает, поддерживает ли данный автомат combo-продажи.
	"unicum":?,	//true или false - показывает является ли Уникум производителем автомата.
	"icons":?,	//true или false - показывает поддерживает ли автомат иконки возле товаров.
	"coffee":?,	//true или false - показывает есть ли в составе автомата кофейник.
	"snack":?,	//true или false - показывает есть ли в составе автомата снек.
	"selhex":?,	//true или false - показывает поддержваются ли для данного автомата буквы A..F в номерах ячеек. Значение false означает только цифры.
	"decimal":?,	//целое число от 0 до 3 - показывает число знаков после запятой для ценовых значений по автомату. Информация актуальна на данный момент, независимо от того, какая планогармма запрошена.
	"products":[	//Планограмма. Массив состоит из структур, каждая из которых определяет одну позицию планогарммы.
		{
			"type":?,	//строка, принимающая одно из следующих значений: "ingredient" - определяет ингредиент. "combo" - определяет комбо-продажу. "coffee" - определяет напиток. "snack" - определяет снек.
			"selection":?,	//строка, определяющая номер ячейки. Может содержать цифры и буквы от A до F. Для ингредиентов в строке указывается число от 0 до 62, определяющее индекс ингредиента в массивах "ingredients" (см. ниже)
			"productID":?,	//отсутствует для ингредиентов. Целое число, задающее номер продукта (число, обозначающее данную ячейку в внутреннем ПО автомата).
			"pid_default":?,	//отсутствует для ингредиентов. true или flase. Определяет совпадает ли productID с стандартным для данного типа автомата и для данной ячейки. Если true, то можно отображать поле "номер продукта" незаполненным.
			"name":?,	//строка, определяющая название товара. Для автоматов Уникум, в автомат передаются только первые 20 символов строки. Для остальных первые 30. Максимальное число символов - 100.
			"guid":?,	//null или строка, определяющая GUID товара.
			"max":?,	//Для ингредиентов - число с двумя знаками после точки. Для остальных - целое число. Определяет максимальную загрузку товара в автомат (для ингредиентов - в миллилитрах / граммах / штуках).
					//Значение используется для учета расхода товара / ингредиента. Значение 0 означает, что для данной позиции учет не производится.
			"decimal":?,	//Отсутствует для ингредиентов. Целое число от 0 до 3 - показывает число знаков после запятой для ценовых значений по данной позиции в данной планограмме.
			"price":?,	//Отсутствует для ингредиентов. Целое число, определяющее цену за наличные. Должна отображаться с учетом параметра "decimal".
			"price_cl1":?,	//Отсутствует для ингредиентов. null или целое число, определяющее цену за безналичные для группы пользователей 1. При значении null считается равным параметру "price"
			"price_cl2":?,	//Отсутствует для ингредиентов. null или целое число, определяющее цену за безналичные для группы пользователей 2. При значении null считается равным параметру "price"
			"price_cl3":?,	//Отсутствует для ингредиентов. null или целое число, определяющее цену за безналичные для группы пользователей 3. При значении null считается равным параметру "price"
			"tax":?,	//Отсутствует для ингредиентов. null или целое число от 0 до 15. Определяет налоговую ставку, которая установится в автомате при передаче планогарммы в автомат.
					//null или значения, выходящие за рамки от 0 до 15 - не меняет ставку в автомате. Значение 0 определяет ставку 1 (20%). Значение 1 - ставку 2 (10%). Значение 2 - ставку 3 (0%).
					//Значение 3 - ставку 4 (БЕЗ НДС). Значение 4 - ставку 5 (20/120). Значение 5 - ставку 6 (10/110). Значения 6-15 - виртуальные ставки 7-16.
			"articleID":?,	//Отсутствует для ингредиентов. Отсутствует для автоматов не-Уникум. null или целое число от 0 дл 65535. Определяет код товара, который должен установиться в автомате при
					//передаче планогарммы в автомат. null - не меняет код товара, либо позволяет онлайн-мониторингу принимать решение о назначении кода на основании цены, названия, GUID.
					//Остальное - устанавливает код товара. Код товара используется для соединения ячеек (только для снека), а также для идентификации
					//изображений в некоторых тач-автоматах. При соедненении ячейки 0 означает НЕ СОЕДИНЯТЬ, числа от 1 до 65535 означает соединять с другими ячейками с таким же кодом товара.
			"priority":?,	//Отсутствует для ингредиентов. Отсутствует для не-Уникум. Отсутствует для кофейников. null или целое число от 0 до 255. Определяет приоритет, который должен установиться в автомате при
					//передаче планогарммы в автомат. Приоритет определяет очередность выдачи соединенных ячеек. null не меняет приоритет, либо позволяет онлайн-мониторингу принимать решение о назначении
					//приоритета, если он автоматически назначает код товара (см. выше). Число задает приорите (чем меньше число, тем в более первую очередь будет выдаваться эта ячейка).
			"iconID":?,	//Отсутствует для ингредиентов. Отсутствует для автоматов, не поддерживающих иконки возле товаров (параметр icons равен false). null или целое число от 0 до 65535.
					//Определяет код иконки, который должен установиться в автомате при передаче планогарммы в автомат. null не меняет код иконки. 0 - отключает иконку. Число 1 и выше - устанавливает ее.
			"fresh":?,	//Отсутствует для ингредиентов. Отсутствует для не-Уникум. Отсутствует для кофейников. null, true или false. Определяет условия хранения товара, которые должны установиться в автомате при
					//передаче планогарммы в автомат. null не меняет условия хранения. true устанавливает, что твар является скоропортом (важна температура). false устанавливает обычный товар.
			"ingredients":[...],	//Отсутствует для ингредиентов. Массив, определяющий расход ингредиентов при выдаче данного товара. Массив состоит из чисел с двумя знаками после десятичной точки.
						//Кажде число определяет расход ингредиента, индекс которого совпадает с индексом элемента в массиве (от 0 до 62). Расход задается в тех же единицах, что задан max для этого
						//ингредиента.
			"contents":[		//Присутствует только для комбо-продаж. Определяет состав комбо-продажи. Каждый элемент является структурой, определяющей один товар. Товары выдаются в порядке, в
						//котором определены структуры. Комбо-продажа состоит из 2, 3 или 4-х товаров.
				{
					"type":?,	//строка, равная либо "coffee", либо "snack". Определяет тип товара, входящего в состав комбо-продажи.
					"selection":?	//строка, определяющая номер ячейки, входящей в состав комбо.
				},...
			]
		},...
	]
}

==================================

https://online.unicum.ru/(????/)wjson/setplanogram.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: редактирование планограмм.
Позволяет запланировать изменение планограммы, либо изменить ее сразу (в зависимости от изменяемых параметров).
На входе:
{
	"machinebm":?,		//Обязательный параметр: строка, задает букмарк автомата, по которому нужно сформировать список.
	"products":[		//Массив, определяющий планограмму. Каждый элемент массива - структура, определяющая либо ингредиент, либо ячейку, либо комбо-продажу.
		{
			"type":?,	//обязательный параметр, строка, которая показывает что описывает данная структура (ингредиент, ячейку, либо комбо-продажу). Все остальные значения зависят от этого параметра.
					//Принимает одно из следующих значений: "ingredient" - определяет ингредиент. "combo" - определяет комбо-продажу. "coffee" - определяет напиток. "snack" - определяет снек.
			"selection":?,	//Обязательный параметр для ингредиента. Крайне желательный параметр для остальных (может отсутствовать только если есть параметр productID). Строка, указывающая номер ячейки.
					//Может состоять из цифр или букв A..F (буквы поддерживаются не всеми автоматами). Для комбопродажи 1 должна быть равна "99". Для комбо-продажи 2 должна быть равна "98".
					//Для комбопродажи 3 должна быть равна "97". Для комбо-продажи 3 должна быть равна "96". Для ингредиентов должно быть указано число от "0" до "62", указывающее индекс ингредиента.
					//Ингредиенты должны использовать индексы, идущие от 0, без пропусков. Индекс определяет порядковый номер элемента в массивах расходов ингредиентов (см. ниже).
			"productID":?,	//Необязательный параметр (при наличии "selection") - целое число от 0 до 65535. Для ингредиентов - игнорируется. Указывает число, которым данная ячейка кодируется внутри
					//торгового автомата. Если поле пустое, оно будет автоматически вычислено онлайн-мониторингом из поля "selection".
			"name":?,	//Обязательный параметр. Строка. Название товара / комбо-продажи или ингредиента. Не более 100 символов. При использовании символов за пределами кодировки 1251, каждый символ, код которого
					//больше 0x7F (127) считается за 2 символа (или более). Для комбопродаж, максимальная длина названия еще меньше. Все символы, которые вышли за это ограничение - будут обрезаны.
					//Кроме того, при передаче планогарммы в автомат, для автоматов Уникум только первые 20 символов попадут в автомат (остальное - отрежется). Для не-Униукум - первые 30.
			"guid":"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",	//Необязательный параметр. GUID товара или ингредиента. Если параметр отсутствует, то сервер постарается его заполнить из предыдущей планограммы. Если
					//и в ней его нет, то товар останется без GUID.
			"max":?,	//Обязательный параметр для всех. Указывает максимальную загрузку в автомат. 0 отключает контроль расхода данного товара. Для товаров задается целым числом от 0 до 65535. Для инредиентов
					//задается числом с двумя цифрыми после запятой в диапазоне от 0.00 до 42949672.95 (миллилитры / граммы / штуки).
			"decimal":?,	//Игнорируется для ингредиентов. Обязателен для остальных. Целое число от 0 до 3. Задает положение точки в ценах для данной ячейки (число знаков на копейки).
			"price":?,	//Игнорируется для ингредиентов. Обязателен для остальных. Целое число от 0 до 4294967295. Определяет цену за наличные для товара в единицах, которые определяются параметром decmial (см. выше).
			"price_cl1":?,	//Необязательный параметр. При отстутствии считается равным параметру "price". null или целое число от 0 до 4294967295. Определяет цену товара по карте для пользователей группы 1.
					//Для ингредиентов параметр игнорируется.
			"price_cl2":?,	//Необязательный параметр. При отстутствии считается равным параметру "price". null или целое число от 0 до 4294967295. Определяет цену товара по карте для пользователей группы 2.
					//Для ингредиентов параметр игнорируется.
			"price_cl3":?,	//Необязательный параметр. При отстутствии считается равным параметру "price". null или целое число от 0 до 4294967295. Определяет цену товара по карте для пользователей группы 3.
					//Для ингредиентов параметр игнорируется.
			"tax":?,	//Необязательный параметр. null или целое число от 0 до 15. При равенстве null считается отсутствующим. Для ингредиентов игнорируются. Для остальных задает налоговую ставку, по которой.
					//будут пробиваться чеки. Параметр важен только при передаче планогарммы в автомат. Если параметр отсутствует (или равен null), то при передаче планоагрммы в автомат он не изменится.
			"articleID":?,	//Необязателен. Имеет смысл только для товаров и только для автоматов Уникум. null или целое число от 0 до 65535. Задает код товара, который будет установлен в автомате при передаче
					//планогарммы в автомат. Значение null позволяет онлайн-мониторингу при передаче планогарммы в автомат самому назначить код товара. Код товара выполняет две функции. Для Неро-тач, мув,
					//фудбокс-тач он определяет код картинки, обозначающей данный товар. Для снеков он определяет связывание ячеек с одинаковым товаром. Значение 0 - не связывать. Остальное - связывает с
					//ячейками, имеющими такой же код товара.
			"priority":?,	//Необязателен. Имеет смысл только для товаров и только для автоматов Уникум, имеющих снековую часть. null или целое число от 0 до 255. Задает код приоритет ячейки, который будет установлен
					//в автомате при передаче планогарммы в автомат. Значение null позволяет онлайн-мониторингу при передаче планогарммы в автомат самому назначить приоритет. Приоритет работает вместе с
					//кодом товара и определяет очередность выдачи из связыванных ячеек. Чем меньше значение, тем в более первую очередь будет выдаваться данная ячейка.
			"iconID":?,	//Необязателен. Имеет смысл только для товаров и только для автоматов, поддержиающих уточняющие иконки. null или целое число от 0 до 65535. Задает код уточняющей иконки, который будет
					//установлен при передаче планогарммы в автомат. Значение null (или отсутствие параметра) не изменит данный код в автомате при передаче планогарммы. Значение 0 запретит показывать иконку.
					//Значение 1..65535 установит иконку с этим кодом.
			"fresh":?,	//Необязателен. Имеет смысл только для снеков и только для автоматов , поддержиающих уточняющие иконки. null или целое число от 0 до 65535. Задает код уточняющей иконки, который будет
					//установлен при передаче планогарммы в автомат. Значение null (или отсутствие параметра) не изменит данный код в автомате при передаче планогарммы. Значение 0 запретит показывать иконку
					//Значение 1..65535 установит иконку с этим кодом.
			"ingredients":[...],	//Игнорируется для ингредиентов. Необязательный параметр. Массив, определяющий расход ингредиентов при выдаче данного товара. Массив состоит из чисел с двумя знаками после десятичной
						//точки. Кажде число определяет расход ингредиента, индекс которого совпадает с индексом элемента в массиве (от 0 до 62). Число элементов не должно превышать число определенных
						//ингредиентов. Если число элементов меньше числа ингредиентов, либо если массив вообще не определен, то все недостающие элементы считаются равными нулю.
			"contents":[		//Обязателен для комбо-продаж. Игнорируется для всех остальных. Определяет состав комбо-продажи. Каждый элемент является структурой, определяющей один товар. Товары выдаются в порядке, в
						//котором определены структуры. Комбо-продажа состоит из 2, 3 или 4-х товаров.
				{
					"type":?,	//строка, равная либо "coffee", либо "snack". Определяет тип товара, входящего в состав комбо-продажи. Обязателен для комбинированных автоматов.
					"selection":?	//строка, определяющая номер ячейки, входящей в состав комбо. Параметр обязателен.
				},...
			]
		},...
	]
}
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1014,"errors":"machine does not support letters in selections"}. Для данного автомата запрещено использовать буквы в номерах ячеек.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1015,"errors":"wrong selection number","index":xx}. Неверно указан номер ячейки в элементе xx (целое число от 0) массива "products" входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1015,"errors":"wrong selection number","index":[xx,yy]}. Неверно указан номер ячейки в элементе "products"[xx]."selection"[yy] входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1016,"errors":"wrong product number","index":xx}. Неверно указан номер продукта в элементе xx (целое число от 0) массива "products" входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1017,"errors":"selection and product are absent","index":xx}. Не указан ни номер продукта, ни номер ячейки в элементе xx  массива "products" входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1018,"errors":"selection number duplication","index":[xx,yy]}. В элементых xx и yy  массива "products" входных данных указан (или вычислен) одинаковый номер ячейки.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1019,"errors":"product number duplication","index":[xx,yy]}. В элементых xx и yy  массива "products" входных данных указан (или вычислен) одинаковый номер продукта.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1020,"errors":"wrong max","index":xx}. Неверно указан max в элементе xx  массива "products" входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1021,"errors":"wrong price","index":xx}. Неверно указан номер продукта в элементе xx (целое число от 0) массива "products" входных данных.
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1022,"errors":"wrong name","index":xx}. Неверно указано название продукта в элементе xx (целое число от 0) массива "products" входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 404. Текстовый код: Not Found. Содержимое: {"error":1002,"errors":"requested vending machine was not found"}. Означает, что запрошенный автомат не найден.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....}	//см. запрос login.json
}
==================================

https://online.unicum.ru/(????/)wjson/planfromfile.json?xx
Запрос работает без авторизации.
Прав доступа не требуется.
Позволяет из конфигурационного файла получить планограмму.
Запрос отправляется в формате POST. В качестве данных передается конфигурационный файл. Вместо xx передается код языка. Возможные варианты: ru, en, fr, ge и tr.
При отсутствии языка выбирается английский.
На выходе:
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"selhex":?,	//true или false - показывает встречаются ли в данном конф. файле буквы A..F в номерах ячеек. Значение false означает только цифры.
	"products":[	//Планограмма. Массив состоит из структур, каждая из которых определяет одну позицию планогарммы.
		{
			"type":?,	//строка, принимающая одно из следующих значений: "ingredient" - определяет ингредиент. "combo" - определяет комбо-продажу. "coffee" - определяет напиток. "snack" - определяет снек.
					//Действительно только для Уникум. Для не-Уникум все ячейки будут иметь тип snack, и должен игнорироваться.
			"selection":?,	//строка, определяющая номер ячейки (для автоматов Уникум), либо номер продукта (для остальных автоматов). Может содержать цифры и буквы от A до F.
					//Для ингредиентов в строке указывается число от 0 до 62, определяющее индекс ингредиента в массивах "ingredients" (см. ниже)
			"name":?,	//строка, определяющая название товара. Для ингредиентов название представлено на том языке, который был запрошен.
			"max":?,	//Для ингредиентов - число с двумя знаками после точки. Для остальных - целое число. Определяет максимальную загрузку товара в автомат (для ингредиентов - в миллилитрах / граммах / штуках).
					//Значение используется для учета расхода товара / ингредиента. Значение 0 означает, что для данной позиции учет не производится.
			"decimal":?,	//Отсутствует для ингредиентов. Целое число от 0 до 3 - показывает число знаков после запятой для ценовых значений по данной позиции в данной планограмме.
			"price":?,	//Отсутствует для ингредиентов и для товаров, для которых цена в файле не задана. Целое число, определяющее цену за наличные. Должна отображаться с учетом параметра "decimal".
			"price_cl1":?,	//Отсутствует для ингредиентов и для товаров, для которых цена в файле не задана, либо совпадает с ценой за наличные. Целое число, определяющее
					//цену за безналичные для группы пользователей 1.
			"price_cl2":?,	//Отсутствует для ингредиентов и для товаров, для которых цена в файле не задана, либо совпадает с ценой за наличные. Целое число, определяющее
					//цену за безналичные для группы пользователей 2.
			"price_cl3":?,	//Отсутствует для ингредиентов и для товаров, для которых цена в файле не задана, либо совпадает с ценой за наличные. Целое число, определяющее
					//цену за безналичные для группы пользователей 3.
			"tax":?,	//Отсутствует для ингредиентов, комбо-продаж и для товаров, для которых параметр не задан в файле. целое число от 0 до 15. Определяет налоговую ставку, которая установится в автомате
					//при передаче планогарммы в автомат. Значение 0 определяет ставку 1 (20%). Значение 1 - ставку 2 (10%). Значение 2 - ставку 3 (0%).
					//Значение 3 - ставку 4 (БЕЗ НДС). Значение 4 - ставку 5 (20/120). Значение 5 - ставку 6 (10/110). Значения 6-15 - виртуальные ставки 7-16.
			"articleID":?,	//Отсутствует для ингредиентов, комбо-продаж и для товаров, для которых параметр не задан в файле. целое число от 0 дл 65535. Определяет код товара, который должен установиться в автомате при
					//передаче планогарммы в автомат. Код товара используется для соединения ячеек (только для снека), а также для идентификации
					//изображений в некоторых тач-автоматах. При соедненении ячейки 0 означает НЕ СОЕДИНЯТЬ, числа от 1 до 65535 означает соединять с другими ячейками с таким же кодом товара.
			"priority":?,	//Отсутствует для ингредиентов, для кофейных товаров, комбо-продаж и для товаров, для которых параметр не задан в файле. Целое число от 0 до 255.
					//Определяет приоритет, который должен установиться в автомате при передаче планогарммы в автомат. Приоритет определяет очередность выдачи соединенных ячеек.
					//Чем меньше число, тем в более первую очередь будет выдаваться эта ячейка.
			"iconID":?,	//Отсутствует для ингредиентов и для товаров, для которых параметр не задан в файле. Целое число от 0 дл 65535.
					//Определяет код иконки, который должен установиться в автомате при передаче планогарммы в автомат. 0 - отключить иконку. Остальное - установить.
			"fresh":?,	//Отсутствует для ингредиентов, для кофейных товаров, комбо-продаж и для товаров, для которых параметр не задан в файле. true или false. Определяет условия хранения товара,
					//которые должны установиться в автомате при передаче планогарммы в автомат. true устанавливает, что твар является скоропортом (важна температура). false устанавливает обычный товар.
			"ingredients":[...],	//Отсутствует для ингредиентов, снеков и комбо. Отсутствует для товаров, для которых рецепт в файле не задан. Массив, определяющий расход ингредиентов при выдаче данного товара.
						//Массив состоит из чисел с двумя знаками после десятичной точки. Кажде число определяет расход ингредиента, индекс которого совпадает с индексом элемента в массиве (от 0 до 62).
						//Расход задается в тех же единицах, что задан max для этого ингредиента. Все непередаваемые значения считаются равными нулю.
			"contents":[		//Присутствует только для комбо-продаж, для которых состав задан в файле. Определяет состав комбо-продажи. Каждый элемент является структурой, определяющей один товар.
						//Товары выдаются в порядке, в котором определены структуры. Комбо-продажа состоит из 2, 3 или 4-х товаров.
				{
					"type":?,	//строка, равная либо "coffee", либо "snack". Определяет тип товара, входящего в состав комбо-продажи.
					"selection":?	//строка, определяющая номер ячейки, входящей в состав комбо.
				},...
			]
		},...
	]
}

==================================

https://online.unicum.ru/(????/)wjson/sendevafile.json
ТРЕБУЮТСЯ ПРАВО ДОСТУПА: отправка запросов в автоматы.
Позволяет передать конфиуграционный файл (в формате EVA-DTS) на группу автоматов (только автоматы Уникум или красная коробка).
На входе:
{
	"evafile":??,		//Строка, представляющая собой содержимое конфигурационного файла, закодированное с помощью алгоритма base64.
	"machines":[?,?,...],	//Массив строк. Каждый элемент является строкой, задающей букмарк торгового автомата в базе.
	"force":??		//Необязательный параметр, равный true или false. Отсутствие приравнивается к false. Имеет смысл только если массив "machines" состоит из двух или более автоматов.
				//Если равен true, то отправка запросов будет распределена во времени и отправка каждого запроса будет осуществляться принудительно в запланированное время.
				//Если равен false, то запросы будут запланированы к отправке в неопределенное время. Отправка будет произведена в тот момент, когда автомат сам выйдет на связь.
}
Код страницы: 400. Текстовый код: Bad Request. Содержимое: {"error":1000,"errors":"input data error"}. Ошибка входных данных.
Код страницы: 401. Текстовый код: Unauthorized. Содержимое: отсутствует. Требуется авторизация.
Код страницы: 403. Текстовый код: Forbidden. Означает, что логин и пароль были введены неверно более 3-х раз, либо нет доступа к данной информапции из под-данного логина.
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":3,"errors":"Not enough memory"}. Означает ошибку на сервере (мало памяти, невозможно обработать запрос).
Код страницы: 500. Текстовый код: Internal Server Error.Содержимое: {"error":1001,"errors":"database error"}. Означает ошибку базы данных.
Код страницы: 200. Текстовый код: OK. Содержимое:
{
	"user":{....},	//см. запрос login.json
	"requests":[?,?,?,...]	//Массив, состоящий из целых чисел или null. Число элементов соответствует числу элементов в входном массиве machines. Каждый элемент соответствует своему торговому автомату.
				//Значение, равное null, означает, что на этот автомат запрос не был отправлен (автомат не найден, либо нет прав доступа к нему, либо тип автомата не позволяет отправлять подобные запросы,
				//либо автомат в неподходящем состоянии, либо другая ошибка, мешающая отправке запроса). Целое число означает успешное создание запроса и планирование его на отправку. Само число определяет
				//идентификатор запроса в базе данных и состояние запроса можно получить по данному идентификатору позже.
}